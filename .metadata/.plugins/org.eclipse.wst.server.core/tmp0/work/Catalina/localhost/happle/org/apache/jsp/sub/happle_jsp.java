/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-09-20 09:42:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.sub;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class happle_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("	 <!-- font-family -->\r\n");
      out.write("	<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("	<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("	<link href=\"https://fonts.googleapis.com/css2?family=Jua&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("<link href=\"../resource/css/happle.css\" rel=\"stylesheet\">\r\n");
      out.write("<body>\r\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../main/header.jsp", out, false);
      out.write("\r\n");
      out.write("  <div id=\"happle_info\">\r\n");
      out.write("  \r\n");
      out.write("	  <div class=\"section\">\r\n");
      out.write("	  		<img id=\"hap1\" alt=\"\" src=\"../sub/img/h1.jpg\">\r\n");
      out.write("	  		<p class=\"h1_t1\">우리나라의 푸른 섬,</p>\r\n");
      out.write("	  		<p class=\"h1_t2\">제주도를 여행할 땐 해플을 이용해 보세요!</p>\r\n");
      out.write("	  </div>\r\n");
      out.write("	  \r\n");
      out.write("	  <div class=\"section\">\r\n");
      out.write("	  	<div class=\"hap2_side\">\r\n");
      out.write("	  		<img id=\"hap2\" src=\"../sub/img/h2.jpg\">\r\n");
      out.write("	  		<div class=\"h2_content\">\r\n");
      out.write("		  		<img class=\"h2_p1\" src=\"../sub/img/history_point.png\">\r\n");
      out.write("		  		<p class=\"h2_t1\">2020년 설립</p>\r\n");
      out.write("		  		<img class=\"h2_p2\" src=\"../sub/img/history_point.png\">\r\n");
      out.write("		  		<p class=\"h2_t2\">2021년 확장</p>\r\n");
      out.write("		  		<img class=\"h2_p3\" src=\"../sub/img/history_point.png\">\r\n");
      out.write("		  		<p class=\"h2_t3\">2022년 2호점 개설</p>\r\n");
      out.write("		  		<p class=\"h2_t4\"> 해플은 꾸준히 <br> 성장하고 있습니다</p>\r\n");
      out.write("	  		</div>\r\n");
      out.write("	  	</div>\r\n");
      out.write("	  </div>\r\n");
      out.write("	  \r\n");
      out.write("	  <div class=\"section\">\r\n");
      out.write("	  		<img id=\"hap3\" alt=\"\" src=\"../sub/img/h3.jpg\">\r\n");
      out.write("	  </div>\r\n");
      out.write("	  \r\n");
      out.write("	  <div class=\"section\">\r\n");
      out.write("	  		<img id=\"hap4\" alt=\"\" src=\"../sub/img/h4.jpg\">\r\n");
      out.write("	  		<div class=\"h4_content\">\r\n");
      out.write("		  		<p class=\"h4_t1\"> HAPPY PLACE <span>해</span> 피 <span>플</span> 레 이 스 </p>\r\n");
      out.write("				<p class=\"h4_t2\"> 어디서든 즐거운 공간이 될 수 있도록 </p>\r\n");
      out.write("			</div>\r\n");
      out.write("	  </div>\r\n");
      out.write("	  <div class=\"section\">\r\n");
      out.write("	  		<img id=\"hap5\" alt=\"\" src=\"../sub/img/h5.jpg\">\r\n");
      out.write("	  		<div class=\"h5_content\">\r\n");
      out.write("		  		<p class=\"h5_t1\"> 해플의 메인 서비스인 야경투어도 정말 재밌어요</p>\r\n");
      out.write("		  		<a href=\"../sub/tour.jsp\">\r\n");
      out.write("		  			<p class=\"h5_t2\"> 보러가기 </p>\r\n");
      out.write("		  		</a>\r\n");
      out.write("	  		</div>\r\n");
      out.write("	  </div>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("  <script>\r\n");
      out.write("    window.onload = function(){\r\n");
      out.write("      const elm = document.querySelectorAll('.section');\r\n");
      out.write("      const elmCount = elm.length;\r\n");
      out.write("      elm.forEach(function(item, index){\r\n");
      out.write("        item.addEventListener('mousewheel', function(event){\r\n");
      out.write("          event.preventDefault();\r\n");
      out.write("          let delta = 0;\r\n");
      out.write("\r\n");
      out.write("          if (!event) event = window.event;\r\n");
      out.write("          if (event.wheelDelta) {\r\n");
      out.write("              delta = event.wheelDelta / 120;\r\n");
      out.write("              if (window.opera) delta = -delta;\r\n");
      out.write("          } \r\n");
      out.write("          else if (event.detail)\r\n");
      out.write("              delta = -event.detail / 3;\r\n");
      out.write("\r\n");
      out.write("          let moveTop = window.scrollY;\r\n");
      out.write("          let elmSelector = elm[index];\r\n");
      out.write("\r\n");
      out.write("          // wheel down : move to next section\r\n");
      out.write("          if (delta < 0){\r\n");
      out.write("            if (elmSelector !== elmCount-1){\r\n");
      out.write("              try{\r\n");
      out.write("                moveTop = window.pageYOffset + elmSelector.nextElementSibling.getBoundingClientRect().top;\r\n");
      out.write("              }catch(e){}\r\n");
      out.write("            }\r\n");
      out.write("          }\r\n");
      out.write("          \r\n");
      out.write("          // wheel up : move to previous section\r\n");
      out.write("          else{\r\n");
      out.write("            if (elmSelector !== 0){\r\n");
      out.write("              try{\r\n");
      out.write("                moveTop = window.pageYOffset + elmSelector.previousElementSibling.getBoundingClientRect().top;\r\n");
      out.write("              }catch(e){}\r\n");
      out.write("            }\r\n");
      out.write("          }\r\n");
      out.write("\r\n");
      out.write("          const body = document.querySelector('html');\r\n");
      out.write("          window.scrollTo({top:moveTop, left:0, behavior:'smooth'});\r\n");
      out.write("        });\r\n");
      out.write("      });\r\n");
      out.write("    }\r\n");
      out.write("  </script>\r\n");
      out.write("  	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../main/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
